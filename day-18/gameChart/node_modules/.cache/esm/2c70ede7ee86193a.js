let MyClass;_ee8‍.w("./data.js",[["default",["MyClass"],function(v){MyClass=v}]]);// import {warriorsGames}  from './data.js';


_ee8‍.g.console.log(MyClass)
// //make chart fucntion returns chart that will be displayed on the HTML page 
// const makeChart = (games, targetTeam) =>{
//     //creating parent ul that will hold the chart
//     const ulParent = document.createElement('ul');  
//     for(let game of games){
//         //creating element for all the children elements
//         const gameLi=document.createElement('li');
//         //using innerHTML because adding bold tag to the output. callback function takes in warriorGames object
//         gameLi.innerHTML = getScoreLine(game)
//         //callback function isWinner takes in both of the parameters and assigns CSS class
//         gameLi.classList.add = (isWinner(game, targetTeam) ? 'win' : 'loss');
//         //appending child to parent elemnt
//         ulParent.appendChild(gameLi);
//     }
//     return ulParent;
// }

// //function to see which team won the game using tetriary operator 
// const isWinner = ({hometeam, awayTeam}, targetTeam)=>{
//     const target = homeTeam.team === targetTeam ? homeTeam : awayTeam;
//     return target.isWinner;
// };

// //extracting team and score information from data.js using decostructor 
// const getScoreLine = ({homeTeam, awayTeam}) => {
//     //deconstuction of object 
//     const {team: hTeam, points: hPoints} = homeTeam; 
//     const {team: aTeam, poins: aPoints} = awayTeam; 
//     const teamNames = `${hTeam} @ ${aTeam}`;

//     let scoreLine;

//     if(aPoints > hPoint){
//         scoreLine= `<b>${aPoints}</b> - ${hPoints}`
//     } else {
//         scoreLine= `${aPoints} - <b> ${hPoints}</b>`
//     }
//     return (`${teamNames} ${scoreLine}`)
// };

// const gsChart = makeChart(warriorsGames, 'Golden State');

// const gsSection = document.querySelector('#gs')

// gsSection.appendChild(gsChart);